<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="club.banyuan.blog.mapper.UserMapper">
    <resultMap type="club.banyuan.blog.entity.UserEntity" id="BaseResultMap">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="enabled" jdbcType="INTEGER" property="enabled"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="userface" jdbcType="VARCHAR" property="userface"/>
        <result column="regTime" jdbcType="TIMESTAMP" property="regTime"/>
        <collection property="roles" ofType="club.banyuan.blog.entity.RoleEntity">
            <id column="rid" property="id"/>
            <result column="rname" property="name"/>
        </collection>
    </resultMap>

    <sql id="Base_Column_List">
        id, username, nickname, enabled, email, userface, regTime
    </sql>

    <select id="getUserByUsername" resultType="club.banyuan.blog.entity.UserEntity">
        select id, username, nickname, password, enabled from user where username=#{username}
    </select>

    <select id="getUserById" resultType="club.banyuan.blog.entity.UserEntity">
        select
        <include refid="Base_Column_List"/>
        from user where id = #{id}
    </select>

    <update id="updateUserEmail">
        update user set email = #{email} WHERE id = #{id}
    </update>

    <select id="getUserByNickname" resultMap="BaseResultMap">
        select u.id, u.username, u.nickname, u.enabled, u.email, u.userface, u.regTime,
        r.id as rid, r.name as rname
        from user u, roles r, roles_user ru
        where u.id = ru.uid and r.id = ru.rid and u.id not in
        (select u2.id from user u2, roles_user ru2 where u2.id = ru2.uid and ru2.rid = 1)
        <choose>
            <when test="nickname!=null and nickname!=''">
                and u.nickname like concat('%',#{nickname},'%') order by u.id
            </when>
            <otherwise>
                order by u.id limit 20
            </otherwise>
        </choose>
    </select>

    <update id="updateUserEnabled">
    update user set enabled = #{enabled} where id = #{uid}
</update>

    <delete id="deleteUserRolesByUid">
    delete from roles_user where uid = #{id}
</delete>

    <insert id="setUserRoles">
        insert into roles_user(rid, uid) values
        <foreach collection="rids" separator="," item="rid">
            (#{rid}, #{id})
        </foreach>
    </insert>

</mapper>